note: content in first line only
.
```{note} a
```
.
arguments: []
body:
- a
content_offset: 0
options: {}
warnings: []
.

note: content in body only
.
```{note}
a
```
.
arguments: []
body:
- a
content_offset: 0
options: {}
warnings: []
.

note: content in first line and body
.
```{note} a
b
```
.
arguments: []
body:
- a
- b
content_offset: 0
options: {}
warnings: []
.

note: content after option
.
```{note}
:class: name
a
```
.
arguments: []
body:
- a
content_offset: 1
options:
  class:
  - name
warnings: []
.

note: content after option with new line
.
```{note}
:class: name

a
```
.
arguments: []
body:
- a
content_offset: 2
options:
  class:
  - name
warnings: []
.

note: content after yaml option
.
```{note}
---
class: name
---
a
```
.
arguments: []
body:
- a
content_offset: 3
options:
  class:
  - name
warnings: []
.

note: content in first line and body
.
```{note} first line
:class: tip

body line
```
.
arguments: []
body:
- first line
- ''
- body line
content_offset: 0
options:
  class:
  - tip
warnings:
- - Cannot split content across first line and body, when options block is present
    (move first line to body)
  - null
.

admonition: no options, no new line
.
```{admonition} first line
body line
```
.
arguments:
- first line
body:
- body line
content_offset: 0
options: {}
warnings: []
.

admonition: no options, new line
.
```{admonition} first line

body line
```
.
arguments:
- first line
body:
- body line
content_offset: 1
options: {}
warnings: []
.

admonition: with options
.
```{admonition} first line
:class: tip

body line
```
.
arguments:
- first line
body:
- body line
content_offset: 2
options:
  class:
  - tip
warnings: []
.

warning: bad yaml
.
```{note}
---
a: {
---
```
.
arguments: []
body: []
content_offset: 3
options: {}
warnings:
- - 'Unknown option keys: [''a''] (allowed: [''class'', ''name''])'
  - 1
.

warning: yaml not a dict
.
```{note}
---
a
---
```
.
arguments: []
body: []
content_offset: 3
options: {}
warnings:
- - 'Invalid options format: expected '':'' after key'
  - 1
.

warning: unknown option name
.
```{note}
:unknown: name
```
.
arguments: []
body: []
content_offset: 1
options: {}
warnings:
- - 'Unknown option keys: [''unknown''] (allowed: [''class'', ''name''])'
  - 0
.

warning: invalid option value
.
```{note}
:class: 1
```
.
arguments: []
body: []
content_offset: 1
options: {}
warnings:
- - 'Invalid option value for ''class'': 1: cannot make "1" into a class name'
  - 0
.

error: missing argument
.
```{admonition}
```
.
error: 1 argument(s) required, 0 supplied
.
