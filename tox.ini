# To use tox, see https://tox.readthedocs.io
# Simply pip or conda install tox
# If you use conda, you may also want to install tox-conda
# then run `tox` or `tox -- {pytest args}`
# To run in parallel using `tox -p` (this does not appear to work for this repo)

# To rebuild the tox environment, for example when dependencies change, use
# `tox -r`

# Note: if the following error is encountered: `ImportError while loading conftest`
# then then deleting compiled files has been found to fix it: `find . -name \*.pyc -delete`

[tox]
envlist = py37-sphinx5

[testenv]
usedevelop = true

[testenv:py{37,38,39,310}-sphinx{4,5}]
deps =
    black
    flake8
extras =
    linkify
    testing
commands_pre =
    sphinx4: pip install --quiet --upgrade-strategy "only-if-needed" "sphinx==4.5.0"
commands = pytest {posargs}

[testenv:docs-{update,clean}]
extras =
    linkify
    rtd
whitelist_externals =
    rm
    echo
    git
commands_pre =
  # Retrieve possibly missing commits:
  -git fetch --unshallow
  -git fetch --tags
commands =
    clean: rm -rf docs/_build
    sphinx-build -nW --keep-going -b {posargs:html} docs/ docs/_build/{posargs:html}
commands_post = echo "open file://{toxinidir}/docs/_build/{posargs:html}/index.html"

[testenv:docs-live]
description = Build the documentation and launch browser
deps = sphinx-autobuild
extras =
    linkify
    rtd
commands =
    sphinx-autobuild \
        --re-ignore _build/.* \
        --port 0 --open-browser \
        -n -b {posargs:html} docs/ docs/_build/{posargs:html}


[testenv:make-changelog]
basepython = python3
depends =
  check-changelog
description =
  Generate a changelog from fragments using Towncrier. Getting an
  unreleased changelog preview does not require extra arguments.
  When invoking to update the changelog, pass the desired version as an
  argument after `--`. For example, `tox -e {envname} -- 1.3.2`.
commands =
  {envpython} -m \
    towncrier.build \
    --version \
    {posargs:'[UNRELEASED DRAFT]' --draft}
deps =
  towncrier == 22.8.0
isolated_build = true
skip_install = true


[testenv:check-changelog]
basepython = {[testenv:make-changelog]basepython}
description =
  Check Towncrier change notes
commands =
  {envpython} -m \
    towncrier.check \
    --compare-with origin/master \
    {posargs:}
deps =
  {[testenv:make-changelog]deps}
isolated_build = {[testenv:make-changelog]isolated_build}
skip_install = {[testenv:make-changelog]skip_install}


[pytest]
addopts = --ignore=setup.py
markers =
    sphinx: set parameters for the sphinx `app` fixture (see ipypublish/sphinx/tests/conftest.py)
filterwarnings =

[flake8]
max-line-length = 100
extend-ignore = E203
